/**
 * cypress-keycloak v1.9.0
 *
 * Copyright (c) 2019 babangsund
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";function e(){for(var e=[],t=0;t<36;t++)e[t]="0123456789abcdef".substr(Math.floor(16*Math.random()),1);return e[14]="4",e[19]="0123456789abcdef".substr(3&parseInt(e[19])|8,1),e[8]=e[13]=e[18]=e[23]="-",e.join("")}Cypress.Commands.add("login",(function(t){var r=t.root,o=t.realm,n=t.username,i=t.password,a=t.client_id,d=t.redirect_uri,c=t.path_prefix,s=void 0===c?"auth":c;return cy.request({url:r+(s?"/"+s:"")+"/realms/"+o+"/protocol/openid-connect/auth",qs:{client_id:a,redirect_uri:d,scope:"openid",state:e(),nonce:e(),response_type:"code",response_mode:"fragment"}}).then((function(e){var t=document.createElement("html");t.innerHTML=e.body;var r=t.getElementsByTagName("form");if(!!r.length)return cy.request({form:!0,method:"POST",url:r[0].action,followRedirect:!1,body:{username:n,password:i}})}))})),Cypress.Commands.add("loginOTP",(function(t){var r=t.root,o=t.realm,n=t.username,i=t.password,a=t.client_id,d=t.redirect_uri,c=t.path_prefix,s=void 0===c?"auth":c,u=t.otp_secret,l=t.otp_credential_id,m=void 0===l?null:l;return cy.request({url:r+"/"+s+"/realms/"+o+"/protocol/openid-connect/auth",qs:{client_id:a,redirect_uri:d,scope:"openid",state:e(),nonce:e(),response_type:"code",response_mode:"fragment"}}).then((function(e){var t=document.createElement("html");t.innerHTML=e.body;var r=t.getElementsByTagName("form");if(!!r.length)return cy.request({form:!0,method:"POST",url:r[0].action,followRedirect:!1,body:{username:n,password:i}}).then((function(e){var t=document.createElement("html");t.innerHTML=e.body;var r=t.getElementsByTagName("form");cy.task("generateOTP",u,{log:!1}).then((function(e){var t={otp:e};m&&(t.selectedCredentialId=m),cy.request({form:!0,method:"POST",url:r[0].action,followRedirect:!1,body:t})}))}))}))})),Cypress.Commands.add("logout",(function(e){var t=e.root,r=e.realm,o=e.redirect_uri,n=e.post_logout_redirect_uri,i=e.id_token_hint,a=e.path_prefix,d=void 0===a?"auth":a,c=n?{post_logout_redirect_uri:n,id_token_hint:i}:{redirect_uri:o};return n&&i&&(c.id_token_hint=i),cy.request({qs:c,url:t+(d?"/"+d:"")+"/realms/"+r+"/protocol/openid-connect/logout"})}));
